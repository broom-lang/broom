(::) = List.(::);

listn = [
| 0 -> List.Empty
| n -> n :: listn (n - 1)
];

nlist = [
| List.Empty = 0
| (n :: _) = n
];

fun x < y =
    not (List.isEmpty y)
    && (List.isEmpty x
        || List.tail! x < List.tail! y);

fun takl x y z =
  match (y < x) [
  |Â False -> z
  |Â True ->
    takl (takl (List.tail! x) y z)
         (takl (List.tail! y) z x)
         (takl (List.tail! z) x y)
  ];

fun tak x y z =
    takl (listn x) (listn y) (listn z)
    |> nlist;

