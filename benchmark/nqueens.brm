val (::) = List.(::)

fun nqueens n = begin
  fun iota1 n = begin
    fun loop l = fn
     | 0 -> l
     | i -> loop (i - 1) (i :: l)
     end
    
    ; loop n List.Empty
  end

  fun myTry List.Empty List.Empty _ = 1
    | myTry List.Empty _ _ = 0
    | myTry (x0 :: x') y z =
      match isOk x0 1 z
      | True -> myTry (List.concat x' y) List.empty (x0 :: z)
      | False -> 0
      end
      + myTry x' (x0 :: y) z

  fun isOk _ _ List.Empty = True
    | isOk row dist (placed0 :: placed') =
      not (placed0 == row + dist)
      && not (placed0 == row - dist)
      && isOk row (dist + 1) placed'

  ; myTry (iota1 n) List.Empty List.Empty
end

